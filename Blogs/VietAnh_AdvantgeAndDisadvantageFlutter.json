{
  "rawContent": "<div class=\"post-body\">\n    <figure>\n        <img src=\"https://i.postimg.cc/j2vn34PB/flutter-mobile-web-desktop.jpg\" alt=\"flutter icon\">\n        <figcaption>Flutter</figcaption>\n    </figure>\n    <h1 id=\"gioi-thieu\">Giới thiệu</h1>\n    <p>\n        <strong>React Native</strong> đã ra đời khá lâu và trở thành nền tảng mạnh mẽ giúp phát triển phần mềm di động.\n        Nhưng đến thời điểm này, <strong>Flutter</strong>, một cái tên mới sẽ hứa hẹn kỷ nguyên mới bắt đầu. Bài viết\n        này sẽ có cái nhìn tổng quan về Flutter, toàn bộ về ưu và khuyết điểm của nền tảng này.\n    </p>\n    <h1 id=\"flutter-la-gi\">Flutter là gì</h1>\n    <p>\n        Flutter là nền tảng phát triển ứng dụng đa nền tảng cho iOS và Android do Google phát triển. Flutter sử dụng\n        ngôn ngữ DART cũng do Google phát triển và flutter cũng đã được sử dụng để tạo ra các ứng dụng native cho\n        Google.\n    </p>\n\n    <h2 id=\"ngon-ngu-dart\">Ngôn ngữ DART</h2>\n    <figure>\n        <img\n                src=\"https://i.postimg.cc/nz9CGthj/dart-flutter.gif\"\n                alt=\"dart\"\n        />\n        <figcaption>Dart</figcaption>\n    </figure>\n\n    <p>\n        Ngôn ngữ DART là ngôn ngữ thuần hướng đối tượng được Google giới thiệu từ năm 2011, với mục đích cung cấp sự lựa\n        chọn hiện đại hơn nhưng không thay thế Javascript. Tối ưu cho client, nhất là ứng dụng đa nền tảng.\n        Từng giữ vị trí Top 1 cho bình chọn ngôn ngữ không nên học năm 2018 theo Codementor:\n        <a href=\"https://www.codementor.io/blog/worst-languages-to-learn-3phycr98zk\" taget=\"_blank\">https://www.codementor.io/blog/worst-languages-to-learn-3phycr98zk</a><br>\n        Có thể nói mọi thứ đều có thể trở thành hiện tượng “vật đổi sao dời”, từ một ngôn ngữ không nên học vào 2018 có\n        thể trở thành ngôn ngữ được sử dụng nhiều trong năm 2019 này, và nhờ Flutter mà có khả năng tiếp tục phát triển\n        vào 2020.<br>\n        Ngôn ngữ DART hiện nay được hỗ trợ khá tốt ở Visual Studio Code, và trong Android Studio.\n    </p>\n    <pre><code class=\"language-dart\">class Human {\n    String hobby;\n    Human(this.hobby);\n    bool isEating() {\n        return true;\n    }\n}\n\nvoid main() {\n    var  human = Human('doc sach');\n    print(human.hobby);\n}</code></pre>\n\n    <h2 id=\"flutter-co-the-lam-duoc-gi\">Flutter có thể làm được gì</h2>\n\n    <h3 id=\"flutter-uu-diem\">Flutter: Ưu điểm</h3>\n    <ul>\n        <li>Mạnh về hiệu ứng, hiệu suất ứng dụng rất cao.</li>\n        <li>Giao tiếp gần như trực tiếp với hệ thống</li>\n        <li>Ngôn ngữ kiểu tĩnh nhưng với cú pháp hiện đại (tương tự JS, Python, Java), compiler linh động khi dùng AOT\n            (cho sản phẩm cuối) và JIT (cho quá trình phát triển với hot reload)\n        </li>\n        <li>Có thể chạy được giả lập mobile ngay trên web, tiện cho việc phát triển. Các bộ đo lường chỉ số hiệu suất\n            được hỗ trợ sẵn giúp lập trình viên kiểm soát tốt hiệu suất của ứng dụng.\n        </li>\n        <li>\n            Có thể dùng để xây dựng các nền tảng gắn vào ứng dụng native để tăng hiệu suất.\n        </li>\n    </ul>\n    <figure>\n        <img\n                src=\"https://i.postimg.cc/kgy1q09b/pros-and-cons-of-flutter.png\"\n                alt=\"Flutter pros & cons\"\n        />\n        <figcaption>Flutter pros & cons</figcaption>\n    </figure>\n\n    <h3 id=\"flutter-nhuoc-diem\">Flutter: Nhược điểm</h3>\n    <ul>\n        <li>Bộ render UI&nbsp;được nhóm phát triển gần như viết lại, không liên quan tới UI có sẵn của Framework native,\n            dẫn đến memory sử dụng khá nhiều. Hơn nữa, các UI không đi chung với OS, mà được phát triển riêng, nghĩa là\n            cùng 1 phiên bản Flutter khi tạo ra ứng dụng cho iOS thì iOS 8.x -&gt; 12.x đều y chang nhau, tương tự như\n            với Android. Nhưng UI của Android thì tất nhiên khác với iOS.\n        </li>\n        <li>Phải học thêm ngôn ngữ DART: lập trình viên biết về DART không nhiều, cũng có rủi ro là học xong DART sẽ\n            dính liền luôn với DART ở mảng phát triển ứng dụng mobile. Chứ không uyển chuyển như JS hay Python có thể\n            nhảy qua lại giữa front, back hay AI…\n        </li>\n\n        <li>Mô hình dữ liệu mới: bloc pattern, DART Streaming; nếu đã quen với\n            <a href=\"https://fullstackstation.com/ky-thuat-lap-trinh-time-traveling-la-gi/\">Redux</a>\n            khi làm phát triển React Native, bạn sẽ mất thời gian để học thêm mô hình dữ liệu trong Flutter, mặc dù nó\n            không khó.\n        </li>\n\n        <li>Là con cưng của Google, tuy nhiên hãng dính nhìu phốt với thói quen “quăng con giữa chợ” nên cũng cần cân\n            nhắc. Tuy nhiên, mình nhận thấy Flutter rất tốt, tốt hơn nhiều so với những cái mà Google từng làm ra như\n            Angular.\n        </li>\n\n    </ul>\n\n    <p>\n        <strong>Native đúng nghĩa</strong><br>\n        Bộ engine để render UI hoàn toàn thuộc Flutter, vì vậy bạn có thể tạo ra bất kỳ hiệu ứng và đồ hoạ nào cho cả 2\n        nền tảng iOS và Android. Bạn có thể tưởng tượng Flutter như 1 engine game, có thể điểu chỉnh đến từng pixel và\n        phủ trên đó là hệ thống Widget đa dạng, phong phú.\n    </p>\n\n    <p>\n        <strong>Dart DevTools</strong><br>\n        DevTools tuy mới ở giai đoạn beta nhưng độ hoàn thiện cũng rất cao, so với DevTools của React/React Native thì\n        DevTools của Flutter tốt hơn.\n    </p>\n    <figure>\n        <img\n                src=\"https://i.postimg.cc/vZV6NqLh/slide-6.jpg\"\n                alt=\"Hreload\"\n        />\n\n    </figure>\n\n    <p>\n        <strong>Hot Reload</strong><br>\n        Khi làm việc với những thứ liên quan đến UI thì Hot Reload thật khiến cho lập trình viên dễ chịu, càng tuyệt hơn\n        khi Flutter cung cấp khả năng ghi nhớ state của ứng dụng. Hot Reload cung cấp cho bạn trải nghiệm tuyệt vời khi\n        lập trình Flutter, so với React Native thì điểm này Flutter hơn.\n    </p>\n\n\n    <p>\n        <strong>Nâng cấp dễ dàng</strong><br>\n        Mặc dù cách cài đặt ban đầu của Flutter là tải về tập tin nén, nhưng khi cập nhật lên phiên bản mới thì chỉ cần\n        dòng lệnh là đủ, và khá dễ dàng. Ứng dụng sau khi nâng cấp phiên bản Flutter chạy không gặp trở ngại gì cả. Đây\n        là một điểm cộng khá lớn khi xét về độ trưởng thành. Khi sử dụng React Native, các phiên bản từ 0.25, 0.48 có\n        những thay đổi phải sửa bằng tay mới chạy, rất khó chịu.\n    </p>\n\n\n    <h2 id=\"nhung-dieu-chua-lam-duoc-cua-flutter\">Những điều chưa làm được của Flutter</h2>\n    <p>\n        <strong>Cập nhật lên kho ứng dụng không dễ dàng</strong><br>\n        Phải cập nhật ứng dụng thông qua trung tâm ứng dụng như Play Store hay App Store. Với React Native, nếu bạn chỉ\n        chỉnh sửa phần sử dụng javascript thì bạn không cần phải build phiên bản mới để cập nhật ứng dụng. Điều này là\n        không thể với Flutter vì Flutter build ra ứng dụng native, và code được biên dịch AOT.\n    </p>\n    <p>\n        <strong>Thiếu JSX</strong><br>\n        Gọi là thiếu thì cũng không chính xác, nhưng do quen với JSX khá thuận tiện của React Native. Mình thấy có khi\n        JSX trực quan và dễ hiểu layout hơn của Flutter. Yêu cầu về JSX đã được gởi tới nhóm phát triển, họ không từ\n        chối, tuy nhiên cũng không nên mong đợi điều này vì có lẽ nó không phù hợp lắm với DART.\n    </p>\n    <p>\n        <strong>Import chưa rõ ràng</strong><br>\n        Có chút khó khăn khi code, không biết 1 class, function được import từ package nào. Nếu sử dụng IDE hoặc VSCode\n        thì có thể hover lên class để xác định, tuy nhiên đối với các Text Editor khác hoặc đọc bài viết thì khó xác\n        định được class thuộc package nào.\n    </p>\n\n    <h1 id=\"fullstack-station-tips\">Kết luận</h1>\n    <p>\n        Vừa native vừa hot reload, cho trải nghiệm tốt cả giai đoạn phát triển và hiệu suất ứng dụng tốt. Đây quả là 1\n        điều tuyệt vời! Mình thật sự ấn tượng với Flutter.Tuy nhiên, ngôn ngữ Dart là một rào cản khá lớn, mình nghĩ\n        phải cân nhắc rất kỹ cho định hướng nghề nghiệp. Nếu bạn muốn trở thành lập trình viên ứng dụng di động, hãy sử\n        dụng Flutter từ hôm nay.\n    </p>\n</div>",
  "authorName": "Viet Anh",
  "timeRelease": "2021-11-07T22:30:50Z",
  "timeCreate": "2021-11-05T23:14:50Z",
  "title": "Flutter: Ưu, Nhược điểm",
  "subTitle": "Bài viết này sẽ có cái nhìn tổng quan về Flutter, toàn bộ về ưu và khuyết điểm của nền tảng này.",
  "coverImgUrl": "https://i.postimg.cc/Hs5ph87X/avatar.jpg",
  "thumbnailImgUrl": "https://i.postimg.cc/j2vn34PB/flutter-mobile-web-desktop.jpg",
  "blogTag": ["Flutter", "Dart", "Mobile Development"]
}